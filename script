{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "adf26875",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import sklearn\n",
    "from sklearn import preprocessing\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from matplotlib.pyplot import figure\n",
    "import copy\n",
    "from sklearn.metrics import mean_squared_error\n",
    "\n",
    "# Load in relevant libraries, and alias where appropriate\n",
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.nn.functional as F\n",
    "import torchvision\n",
    "import torchvision.transforms as transforms\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "247d44de",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Determine the supported device\n",
    "def get_device():\n",
    "    if torch.cuda.is_available():\n",
    "        device = torch.device('cuda:0')\n",
    "    else:\n",
    "        device = torch.device('cpu') # don't have GPU \n",
    "    return device"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5176e8e2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12/10/2013</td>\n",
       "      <td>23.698</td>\n",
       "      <td>24.345</td>\n",
       "      <td>23.610</td>\n",
       "      <td>24.064</td>\n",
       "      <td>18043837</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12/11/2013</td>\n",
       "      <td>24.607</td>\n",
       "      <td>26.288</td>\n",
       "      <td>24.539</td>\n",
       "      <td>25.139</td>\n",
       "      <td>43224764</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Date    Open    High     Low   Close    Volume\n",
       "0  12/10/2013  23.698  24.345  23.610  24.064  18043837\n",
       "1  12/11/2013  24.607  26.288  24.539  25.139  43224764"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Train data\n",
    "\n",
    "train_data = pd.read_csv(r\"C:\\PythonEnvironments\\TorchEnv\\6140- Homework 5\\dataset1\\train.csv\", header = 0, engine='python')\n",
    "train_data.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "874181a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1/3/2017</td>\n",
       "      <td>46.876</td>\n",
       "      <td>46.936</td>\n",
       "      <td>45.741</td>\n",
       "      <td>45.904</td>\n",
       "      <td>6709362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1/4/2017</td>\n",
       "      <td>46.232</td>\n",
       "      <td>47.029</td>\n",
       "      <td>45.954</td>\n",
       "      <td>46.301</td>\n",
       "      <td>5750132</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Date    Open    High     Low   Close   Volume\n",
       "0  1/3/2017  46.876  46.936  45.741  45.904  6709362\n",
       "1  1/4/2017  46.232  47.029  45.954  46.301  5750132"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Test data\n",
    "\n",
    "test_data = pd.read_csv(r\"C:\\PythonEnvironments\\TorchEnv\\6140- Homework 5\\dataset1\\test.csv\", header = 0, engine='python')\n",
    "test_data.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "8d28c72c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>OpenInt</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1/4/2016</td>\n",
       "      <td>40.483</td>\n",
       "      <td>40.543</td>\n",
       "      <td>39.513</td>\n",
       "      <td>40.111</td>\n",
       "      <td>11912819</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1/5/2016</td>\n",
       "      <td>40.378</td>\n",
       "      <td>40.680</td>\n",
       "      <td>39.168</td>\n",
       "      <td>39.730</td>\n",
       "      <td>10152872</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Date    Open    High     Low   Close    Volume  OpenInt\n",
       "0  1/4/2016  40.483  40.543  39.513  40.111  11912819        0\n",
       "1  1/5/2016  40.378  40.680  39.168  39.730  10152872        0"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Validation data\n",
    "\n",
    "valid_data = pd.read_csv(r\"C:\\PythonEnvironments\\TorchEnv\\6140- Homework 5\\dataset1\\validation.csv\", header = 0, engine='python')\n",
    "valid_data.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2710dcfd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Standardize the data with mean 0 and unit variance:\n",
    "\n",
    "# To approach each dataset:\n",
    "def standardize(data):\n",
    "    for column in data.columns:\n",
    "        if column == 'Date': \n",
    "            continue\n",
    "        else:\n",
    "            # The mean and standard deviation values are:\n",
    "            mean, std = data[column].mean(), data[column].std()\n",
    "            print(column, \": \")\n",
    "            print('Unscaled data Mean: %.3fu, Standard deviation: %.3f' % (mean, std))\n",
    "\n",
    "            # Applying the standardization function:\n",
    "            data[column] = (data[column] - mean)/std\n",
    "\n",
    "            # Scaled mean and std values are: \n",
    "            print('Scaled data Mean: %.3fu, Standard deviation: %.3f' % (data[column].mean(), data[column].std()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ff5a5357",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Open : \n",
      "Unscaled data Mean: 40.427u, Standard deviation: 6.304\n",
      "Scaled data Mean: -0.000u, Standard deviation: 1.000\n",
      "High : \n",
      "Unscaled data Mean: 41.069u, Standard deviation: 6.315\n",
      "Scaled data Mean: -0.000u, Standard deviation: 1.000\n",
      "Low : \n",
      "Unscaled data Mean: 39.771u, Standard deviation: 6.207\n",
      "Scaled data Mean: -0.000u, Standard deviation: 1.000\n",
      "Close : \n",
      "Unscaled data Mean: 40.425u, Standard deviation: 6.249\n",
      "Scaled data Mean: -0.000u, Standard deviation: 1.000\n",
      "Volume : \n",
      "Unscaled data Mean: 12365219.118u, Standard deviation: 8392336.248\n",
      "Scaled data Mean: -0.000u, Standard deviation: 1.000\n"
     ]
    }
   ],
   "source": [
    "standardize(train_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "971e84d8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Open : \n",
      "Unscaled data Mean: 46.929u, Standard deviation: 3.210\n",
      "Scaled data Mean: 0.000u, Standard deviation: 1.000\n",
      "High : \n",
      "Unscaled data Mean: 47.480u, Standard deviation: 3.182\n",
      "Scaled data Mean: -0.000u, Standard deviation: 1.000\n",
      "Low : \n",
      "Unscaled data Mean: 46.336u, Standard deviation: 3.177\n",
      "Scaled data Mean: 0.000u, Standard deviation: 1.000\n",
      "Close : \n",
      "Unscaled data Mean: 46.901u, Standard deviation: 3.174\n",
      "Scaled data Mean: -0.000u, Standard deviation: 1.000\n",
      "Volume : \n",
      "Unscaled data Mean: 6129791.560u, Standard deviation: 2659174.888\n",
      "Scaled data Mean: -0.000u, Standard deviation: 1.000\n"
     ]
    }
   ],
   "source": [
    "standardize(test_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "5e444844",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Open : \n",
      "Unscaled data Mean: 37.641u, Standard deviation: 5.009\n",
      "Scaled data Mean: 0.000u, Standard deviation: 1.000\n",
      "High : \n",
      "Unscaled data Mean: 38.201u, Standard deviation: 5.038\n",
      "Scaled data Mean: 0.000u, Standard deviation: 1.000\n",
      "Low : \n",
      "Unscaled data Mean: 37.102u, Standard deviation: 5.000\n",
      "Scaled data Mean: -0.000u, Standard deviation: 1.000\n",
      "Close : \n",
      "Unscaled data Mean: 37.671u, Standard deviation: 5.020\n",
      "Scaled data Mean: -0.000u, Standard deviation: 1.000\n",
      "Volume : \n",
      "Unscaled data Mean: 8655018.663u, Standard deviation: 3671055.757\n",
      "Scaled data Mean: 0.000u, Standard deviation: 1.000\n",
      "OpenInt : \n",
      "Unscaled data Mean: 0.000u, Standard deviation: 0.000\n",
      "Scaled data Mean: nanu, Standard deviation: nan\n"
     ]
    }
   ],
   "source": [
    "standardize(valid_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "480cc164",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Seperate date to day, month and year for visualization purposes:\n",
    "\n",
    "# Instead convert the date to index, had issues with seperating date components earlier.\n",
    "train_data['Date'] = pd.to_datetime(train_data['Date'], format='%m/%d/%Y')\n",
    "train_data = train_data.set_index('Date')\n",
    "\n",
    "# tr_vis = train_data\n",
    "# tr_vis[[\"Month\", \"Day\", \"Year\"]] = train_data[\"Date\"].str.split(\"/\", expand = True)\n",
    "# tr_vis['YearMonth'] = tr_vis['Year'] + tr_vis['Month']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "4cf32891",
   "metadata": {},
   "outputs": [],
   "source": [
    "# tr_vis.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "0d583802",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'American Airlines Group Highs and Lows 2014-16')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "train_data['High'].plot(label = 'Stock High', figsize = (18,7), color = \"red\")\n",
    "train_data['Low'].plot(label = 'Stock Low', figsize = (18, 7), color = \"blue\")\n",
    "plt.title(\"American Airlines Group Highs and Lows 2014-16\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "82eac224",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'American Airlines Group Opening and Closing values 2014-16')"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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1AmnDkLkIiIiIiIiIgOnBEIvFdSXMMUFROUMyvUyYzLtCgSwpzGs/AqP7PoPy0YfxcspDYTU10HmKYPyXCIiIiIiIiIDpSkMvVTYVEN2WAS4IgblehlRGeyu220/yD6LQm8IW2vyOTWkhpCaNXDEgxA9flCeS0RERERERGSglEDohbrWOuq97WRFJQ/aNbNisihpKOH6169nd3M9ryfY0xWObf0UZv8ass4YtOcSERERERERGShNYeiFgtoCwP6lf7B8Z953+KzsM2577zZ+/cGvSYlMISk0hsMW/AwmXz1ozyMiIiIiIiIyGFSB0AuT48dSkGM4ZfQRg3bN1KhUnvrSU2y/ajtXzr+S+tZ6zpx6Po6pPwZjBu15RERERERERAaDKhB6wdmymyyXBfFTBv3aY+PH8vsTfs8dy+/AYZTPERERERERkZFJCYTeCE2EhfdDytIhewq30z1k1xYREREREREZKCUQeiMkHsZeGugoRERERERERAJGNfMiIiIiIiIi0iMlEERERERERESkR0ogiIiIiIiIiEiPlEAQERERERERkR4pgSAiIiIiIiIiPVICQURERERERER6pASCiIiIiIiIiPRICQQRERERERER6ZESCCIiIiIiIiLSIyUQRERERERERKRHSiCIiIiIiIiISI+UQBARERERERGRHimBICIiIiIiIiI9MpZlDf+TGlMO5A37EwePJKAi0EFIn2ncgpPGLbhp/IKbxi84adyCk8YtuGn8gluwjd9oy7KSu9oRkASCHJgx5hPLsuYGOg7pG41bcNK4BTeNX3DT+AUnjVtw0rgFN41fcDuYxk9TGERERERERESkR0ogiIiIiIiIiEiPlEAYme4JdADSLxq34KRxC24av+Cm8QtOGrfgpHELbhq/4HbQjJ96IIiIiIiIiIhIj1SBICIiIiIiIiI9UgJBRERERERERHqkBIKIiIiIiIiI9EgJhAAxxphAxyB9Y4yZEugYpH+MMVcbY473/1vfe0HGGBO71781fkFGYxZ8dL8LXrrfBTfd74LXoTReSiAMM2PMGcaY+4GZgY5Fes8YcxfwojFmTKBjkd4zxhxvjHkF+AlwKYClzrFBwxhzjDFmHfA3Y8x1oPELJrrfBSfd74KT7nfBTfe74HUo3utcgQ7gUGCMMZZlWcaYZcCvgHZgkTEmz7Ks6gCHJ13oGLO9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\n",
      "text/plain": [
       "<Figure size 1296x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "train_data['Open'].plot(label = 'Stock Open', figsize = (18,7), color = \"orange\")\n",
    "train_data['Close'].plot(label = 'Stock Close', figsize = (18, 7), color = \"green\")\n",
    "plt.title(\"American Airlines Group Opening and Closing values 2014-16\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "d58132c2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Number of samples in each dataset\n",
    "\n",
    "fig = plt.figure()\n",
    "ax = fig.add_axes([0,0,1,1])\n",
    "datasets = ['Train Data', 'Test Data', 'Validation Data']\n",
    "sizes = [len(train_data),len(test_data),len(valid_data)]\n",
    "ax.bar(datasets,sizes)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "43109ca1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function for plotting boxplots:\n",
    "\n",
    "def boxPlots(data, name, showfliers):\n",
    "    data_columns = [data['Open'], data['Close'], data['High'], data['Low'], data['Volume']]\n",
    "\n",
    "    fig = plt.figure(figsize =(10, 7))\n",
    "\n",
    "    ax = fig.add_axes([0, 0, 1, 1])\n",
    "\n",
    "    bp = ax.boxplot(data_columns, vert = False, showfliers = showfliers, showmeans = True)\n",
    "    \n",
    "    ax.set_yticklabels(['Open', 'Close', 'High', 'Low', 'Volume'])\n",
    "    \n",
    "    plt.title(name)\n",
    "    \n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "61a5b07b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Set true if outliers required.\n",
    "showfliers = False\n",
    "\n",
    "boxPlots(train_data, \"Training Data\", showfliers)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3393b18b",
   "metadata": {},
   "source": [
    "Long Short-Term Memory Network with n layers in PyTorch that takes in the number of layers and the number of hidden unit per layer Shidden.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "06246f1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Return the sequential data and prediction for each dataset:\n",
    "\n",
    "# Defining a function to return the data and true predictions as per the dataset:\n",
    "\n",
    "# We will be considering only 'High' values from the datasets:\n",
    "\n",
    "def create_sequences(data, seq_length):\n",
    "    data = data.values\n",
    "    # We need a list\n",
    "    past_sequence = []\n",
    "    future_pred = []\n",
    "    \n",
    "    for i in range(len(data)- seq_length - 1):\n",
    "        # Append i to seq_length values to the past_sequence\n",
    "        last_seq_index = i + seq_length\n",
    "        past_sequence.append(data[i : last_seq_index])\n",
    "        \n",
    "        # Append the value at seq_length index to the future_pred\n",
    "        future_pred.append(data[last_seq_index])\n",
    "        \n",
    "    # Need a numpy array\n",
    "    return np.array(past_sequence), np.array(future_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "88b3f27b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(508, 10, 1) (508, 1)\n"
     ]
    }
   ],
   "source": [
    "# Get train data:\n",
    "X_train, y_train = create_sequences(train_data[['High']], 10)\n",
    "#print(\"X_train:\", X_train[0:5], \"\\n y_train:\", y_train[0:5])\n",
    "print(X_train.shape, y_train.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "3db6ec48",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get test data:\n",
    "X_test, y_test = create_sequences(test_data[['High']], 10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "f6763dba",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get validation data:\n",
    "\n",
    "X_valid, y_valid = create_sequences(valid_data[['High']], 10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1157bfa8",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Transforming these data groups to tensors:\n",
    "\n",
    "X_train = torch.from_numpy(X_train).type(torch.Tensor)\n",
    "#X_train = torch.flatten(X_train)\n",
    "X_test = torch.from_numpy(X_test).type(torch.Tensor)\n",
    "#X_test = torch.flatten(X_test)\n",
    "X_valid = torch.from_numpy(X_valid).type(torch.Tensor)\n",
    "#X_valid = torch.flatten(X_valid)\n",
    "y_train = torch.from_numpy(y_train).type(torch.Tensor)\n",
    "y_test = torch.from_numpy(y_test).type(torch.Tensor)\n",
    "y_valid = torch.from_numpy(y_valid).type(torch.Tensor)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "da692bd6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "torch.Size([508, 10, 1])"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "fcfdc564",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Creating pytorch datasets:\n",
    "\n",
    "train = torch.utils.data.TensorDataset(X_train,y_train)\n",
    "test = torch.utils.data.TensorDataset(X_test,y_test)\n",
    "valid = torch.utils.data.TensorDataset(X_valid,y_valid)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "6ab9176b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Creating pytorch dataloader for dataset batches, shuffling train and validation sets:\n",
    "\n",
    "batch_size = 64 #32\n",
    "\n",
    "train_dataloader = torch.utils.data.DataLoader(dataset=train, batch_size=batch_size, shuffle=True)\n",
    "test_dataloader = torch.utils.data.DataLoader(dataset=test, batch_size=batch_size, shuffle=False)\n",
    "valid_dataloader = torch.utils.data.DataLoader(dataset=valid, batch_size=batch_size, shuffle=True)\n",
    "\n",
    "def stock_batches(dataloader):\n",
    "    for batch_idx, (feature_data, labels) in enumerate(dataloader):\n",
    "        for items in feature_data:\n",
    "            print(items)\n",
    "        labels = labels\n",
    "        break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "d6c7503d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Hyperparameters:\n",
    "learning_rate = 0.01\n",
    "n_epoch = 50\n",
    "input_dim = 1\n",
    "output_dim = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "d80ae016",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Referring to: https://pytorch.org/docs/stable/generated/torch.nn.LSTM.html#torch.nn.LSTM\n",
    "\n",
    "class LSTM(nn.Module):\n",
    "    def __init__(self, input_dim, num_layers, hidden_dim, output_dim):\n",
    "        super(LSTM, self).__init__()\n",
    "        \n",
    "        self.input_dim = input_dim\n",
    "        self.num_layers = num_layers\n",
    "        self.hidden_dim = hidden_dim\n",
    "        self.output_dim = output_dim\n",
    "        \n",
    "        self.lstm = nn.LSTM(input_dim, hidden_dim, num_layers, batch_first = True)\n",
    "        \n",
    "        self.dense = nn.Linear(hidden_dim, output_dim)\n",
    "        \n",
    "    def forward(self, x):\n",
    "        # LSTM takes : input_dim, hidden_dim, num_layers\n",
    "        # h0 and l0 require num_layers, input_dim, hidden_dim\n",
    "        h0 = torch.zeros(self.num_layers, x.size(0), self.hidden_dim, device = x.device)\n",
    "        c0 = torch.zeros(self.num_layers, x.size(0), self.hidden_dim, device = x.device)\n",
    "        \n",
    "        # hx and cx should also be 2-D\n",
    "        output, (hn, cn) = self.lstm(x, (h0, c0))\n",
    "        \n",
    "        # lstm_out has the shape (batch, seq_len, num_directions * hidden_size)\n",
    "        output = self.dense(output[:,-1,:])\n",
    "        \n",
    "        return output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "5d1fc6cd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Defining a function to train and validate the specified model.\n",
    "\n",
    "def train_validate(model, num_epochs, device, train_dataloader, valid_dataloader, optimiser, criterion):\n",
    "        \n",
    "    best_model = model\n",
    "    \n",
    "    model.to(device)\n",
    "\n",
    "    train_num_batches = 0\n",
    "    train_loss = 0.0\n",
    "    train_mse = 0.0\n",
    "    \n",
    "    min_loss = np.Inf\n",
    "    \n",
    "    #List to store loss to visualize\n",
    "    train_loss_list = []\n",
    "    valid_loss_list = []\n",
    "    train_mse_list = []\n",
    "    valid_mse_list = []\n",
    "    \n",
    "    for epoch in range(num_epochs):\n",
    "        \n",
    "        model.train()\n",
    "    \n",
    "        for batch_idx, (feature_data, labels) in enumerate(train_dataloader):\n",
    "\n",
    "            feature_data = feature_data.to(device)\n",
    "\n",
    "            target = labels.to(device)\n",
    "\n",
    "            optimiser.zero_grad()\n",
    "\n",
    "            output = model(feature_data)\n",
    "\n",
    "            train_loss = criterion(output, target)\n",
    "\n",
    "            train_loss.backward()\n",
    "\n",
    "            optimiser.step()\n",
    "\n",
    "            train_loss += train_loss.item()\n",
    "\n",
    "            train_num_batches+=1\n",
    "            \n",
    "            # Trying  mean squared error to check the model's performance while training. \n",
    "            train_mse = mean_squared_error(output.cpu().detach().numpy(), target.cpu().detach().numpy()) * 100\n",
    "        \n",
    "        avg_train_loss = train_loss/train_num_batches\n",
    "        train_loss_list.append(avg_train_loss)\n",
    "        train_mse_list.append(train_mse)\n",
    "\n",
    "        model.eval()\n",
    "\n",
    "        valid_num_batches = 0\n",
    "        valid_loss = 0.0\n",
    "        valid_mse = 0.0\n",
    "    \n",
    "        for batch_idx,(feature_data,labels) in enumerate(valid_dataloader):\n",
    "\n",
    "            feature_data = feature_data.to(device)\n",
    "\n",
    "            target = labels.to(device)\n",
    "\n",
    "            output = model(feature_data)\n",
    "\n",
    "            valid_loss = criterion(output,target)\n",
    "\n",
    "            valid_loss += valid_loss.item()\n",
    "\n",
    "            valid_num_batches+=1\n",
    "            \n",
    "            # Trying  mean squared error to check the model's performance while validating. \n",
    "            valid_mse = mean_squared_error(output.cpu().detach().numpy(), target.cpu().detach().numpy()) * 100\n",
    "            \n",
    "        if(epoch%10==0):\n",
    "            print(\"Epoch:{}, Train Loss: {:.4f}, Valid Loss: {:.4f}\".format(epoch, train_loss, valid_loss))\n",
    "            print(\"Train MSE: {:.4f}, Valid MSE: {:.4f}\".format(train_mse, valid_mse))\n",
    "    \n",
    "        avg_valid_loss = valid_loss/valid_num_batches\n",
    "        valid_loss_list.append(avg_valid_loss)\n",
    "        valid_mse_list.append(valid_mse)\n",
    "        \n",
    "        # Creating a copy of the best model, with minimum loss.\n",
    "        if(min_loss > avg_valid_loss):\n",
    "            best_model = copy.deepcopy(model)\n",
    "            min_loss = avg_valid_loss\n",
    "    \n",
    "    plot_train_val_loss(num_epochs, train_loss_list, valid_loss_list)\n",
    "    \n",
    "    return best_model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "0e453b2a",
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_train_val_loss(n_epoch, train_loss_list, evaluation_loss):\n",
    "        \n",
    "    plt.plot(range(n_epoch), train_loss_list, color='red')\n",
    "    plt.plot(range(n_epoch), evaluation_loss, color='blue')\n",
    "    \n",
    "    plt.legend(['Train Loss','Evaluation Loss'], loc='upper right')\n",
    "    \n",
    "    plt.xlabel('Number of epochs')\n",
    "    plt.ylabel('Loss')\n",
    "    \n",
    "    plt.title(\"Training and Validation Losses\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "cc9fa8ae",
   "metadata": {},
   "outputs": [],
   "source": [
    "def model_test(model, test_dataloader, device, criterion):\n",
    "    \n",
    "    model.to(device)\n",
    "    \n",
    "    test_correct = 0\n",
    "    test_total = 0\n",
    "    test_loss = 0.0\n",
    "    test_acc = 0.0\n",
    "    test_num_batches = 0\n",
    "    \n",
    "    model.eval()\n",
    "    \n",
    "    for batch_idx,(feature_data,labels) in enumerate(test_dataloader):\n",
    "        \n",
    "        feature_data = feature_data.to(device)\n",
    "        \n",
    "        target = labels.to(device)\n",
    "        \n",
    "        output = model(feature_data)\n",
    "        \n",
    "        test_loss = criterion(output, target)\n",
    "        \n",
    "        test_total += target.size(0)\n",
    "        \n",
    "        test_loss += test_loss.item()\n",
    "        \n",
    "        test_num_batches += 1\n",
    "    \n",
    "    avg_test_loss = test_loss / test_num_batches\n",
    "    \n",
    "    return avg_test_loss"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f9426505",
   "metadata": {},
   "source": [
    "LSTM with one hidden layer having 64 neurons on the training dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "9273a0f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "device = get_device()\n",
    "\n",
    "hidden_dim = 64\n",
    "num_layers = 1\n",
    "\n",
    "model = LSTM(input_dim=input_dim, hidden_dim=hidden_dim, output_dim=output_dim, num_layers=num_layers)\n",
    "\n",
    "# Mean square error criterion:\n",
    "criterion = torch.nn.MSELoss(reduction='mean')\n",
    "\n",
    "# Using Adam optimizer\n",
    "optimiser = torch.optim.Adam(model.parameters(), lr=learning_rate)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "00ef63bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor([[[0., 0., 0.,  ..., 0., 0., 0.],\n",
       "         [0., 0., 0.,  ..., 0., 0., 0.],\n",
       "         [0., 0., 0.,  ..., 0., 0., 0.],\n",
       "         ...,\n",
       "         [0., 0., 0.,  ..., 0., 0., 0.],\n",
       "         [0., 0., 0.,  ..., 0., 0., 0.],\n",
       "         [0., 0., 0.,  ..., 0., 0., 0.]]])"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "torch.zeros(num_layers, X_train.size(0), hidden_dim)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "877482c9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LSTM(\n",
      "  (lstm): LSTM(1, 64, batch_first=True)\n",
      "  (dense): Linear(in_features=64, out_features=1, bias=True)\n",
      ")\n"
     ]
    }
   ],
   "source": [
    "print(model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "f64ba049",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch:0, Train Loss: 0.2428, Valid Loss: 0.3425\n",
      "Train MSE: 12.1399, Valid MSE: 17.1247\n",
      "Epoch:10, Train Loss: 0.0425, Valid Loss: 0.0458\n",
      "Train MSE: 2.1266, Valid MSE: 2.2892\n",
      "Epoch:20, Train Loss: 0.0410, Valid Loss: 0.0577\n",
      "Train MSE: 2.0523, Valid MSE: 2.8828\n",
      "Epoch:30, Train Loss: 0.0443, Valid Loss: 0.0613\n",
      "Train MSE: 2.2127, Valid MSE: 3.0662\n",
      "Epoch:40, Train Loss: 0.0281, Valid Loss: 0.0493\n",
      "Train MSE: 1.4065, Valid MSE: 2.4666\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "LSTM(\n",
       "  (lstm): LSTM(1, 64, batch_first=True)\n",
       "  (dense): Linear(in_features=64, out_features=1, bias=True)\n",
       ")"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "train_validate(model, n_epoch, device, train_dataloader, valid_dataloader, optimiser, criterion)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "0a98ee71",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor(0.0720, device='cuda:0', grad_fn=<DivBackward0>)"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_loss = model_test(model, test_dataloader, device, criterion)\n",
    "test_loss"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2cb2f82f",
   "metadata": {},
   "source": [
    "LSTM with two hidden layers having 64 neurons each on the training dataset.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "4f63053f",
   "metadata": {},
   "outputs": [],
   "source": [
    "hidden_dim = 64\n",
    "num_layers = 2\n",
    "\n",
    "model2 = LSTM(input_dim=input_dim, hidden_dim=hidden_dim, output_dim=output_dim, num_layers=num_layers)\n",
    "\n",
    "# Mean square error criterion:\n",
    "criterion = torch.nn.MSELoss(reduction='mean')\n",
    "\n",
    "# Using Adam optimizer\n",
    "optimiser = torch.optim.Adam(model.parameters(), lr=learning_rate)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "581d68cf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LSTM(\n",
      "  (lstm): LSTM(1, 64, num_layers=2, batch_first=True)\n",
      "  (dense): Linear(in_features=64, out_features=1, bias=True)\n",
      ")\n"
     ]
    }
   ],
   "source": [
    "print(model2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "3dfc4187",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch:0, Train Loss: 1.9744, Valid Loss: 1.9449\n",
      "Train MSE: 98.7179, Valid MSE: 97.2462\n",
      "Epoch:10, Train Loss: 1.7124, Valid Loss: 1.6105\n",
      "Train MSE: 85.6213, Valid MSE: 80.5236\n",
      "Epoch:20, Train Loss: 1.9033, Valid Loss: 1.2184\n",
      "Train MSE: 95.1658, Valid MSE: 60.9195\n",
      "Epoch:30, Train Loss: 1.7799, Valid Loss: 1.8411\n",
      "Train MSE: 88.9938, Valid MSE: 92.0560\n",
      "Epoch:40, Train Loss: 1.0455, Valid Loss: 1.7636\n",
      "Train MSE: 52.2748, Valid MSE: 88.1779\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "LSTM(\n",
       "  (lstm): LSTM(1, 64, num_layers=2, batch_first=True)\n",
       "  (dense): Linear(in_features=64, out_features=1, bias=True)\n",
       ")"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "train_validate(model2, n_epoch, device, train_dataloader, valid_dataloader, optimiser, criterion)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "450494b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor(0.3652, device='cuda:0', grad_fn=<DivBackward0>)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_loss = model_test(model2, test_dataloader, device, criterion)\n",
    "test_loss"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "21f6a191",
   "metadata": {},
   "source": [
    "I additionally planned on looking at the Mean Squared Errors for both the models to have a better idea of the performance. It seems that the model 2 has performed significantly worse than model 1. I also notice large variation in the training losses. After slight research I found that this could be because of a small batch size (Earlier I had a batch size of 32, after updating it to 64, the fluctuation has reduced by a great range). It can be seen that the number of hidden layers have disadvantageously affected to model training, which could be because of the complexity of data. It could be possible that the second model would perform better when we have all the features included. By increasing the input sequence length to 20, I observed that the MSE for even the first model has slightly increase, that makes sense. Longer sequence will lead to high variability, and erroraneous predictions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b7315085",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
